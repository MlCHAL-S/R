setwd('/home/michal/Desktop/R/14X')
if (!require(dplyr)) install.packages("dplyr")
if (!require(magrittr)) install.packages("magrittr")
if (!require(ggplot2)) install.packages("ggplot2")
library(dplyr)      # Data manipulation
library(magrittr)   # Pipe operators for cleaner syntax
library(ggplot2)
data <- read.csv("/home/michal/Desktop/R/data/wiek.csv")  # Employee ages
print(data)
sorted_data <- data %>% arrange(wiek)
print("Sorted data:")
print(sorted_data)
descriptive_stats <- function(x) {
min_val <- min(x)
max_val <- max(x)
mean_val <- mean(x)
sd_val <- sd(x)  # Standard deviation
var_val <- var(x)  # Variance
median_val <- median(x)
mode_val <- as.numeric(names(sort(table(x), decreasing = TRUE)[1]))  # Most frequent value
lower_bound <- mean_val - 3 * sd_val  # 3-sigma lower bound
upper_bound <- mean_val + 3 * sd_val  # 3-sigma upper bound
outliers <- x[x < lower_bound | x > upper_bound]  # Outliers
descriptive_stats <- function(x) {
min_val <- min(x)
max_val <- max(x)
mean_val <- mean(x)
sd_val <- sd(x)  # Standard deviation
var_val <- var(x)  # Variance
median_val <- median(x)
mode_val <- as.numeric(names(sort(table(x), decreasing = TRUE)[1]))  # Most frequent value
lower_bound <- mean_val - 3 * sd_val  # 3-sigma lower bound
upper_bound <- mean_val + 3 * sd_val  # 3-sigma upper bound
outliers <- x[x < lower_bound | x > upper_bound]  # Outliers
# Return a list of all statistics
list(
min = min_val,
max = max_val,
mean = mean_val,
sd = sd_val,
variance = var_val,
median = median_val,
mode = mode_val,
lower_bound = lower_bound,
upper_bound = upper_bound,
outliers = outliers
)
}
stats <- descriptive_stats(data$wiek)
cat("Descriptive Statistics:\n")
cat("Min:", stats$min, "\n",
"Max:", stats$max, "\n",
"Mean:", stats$mean, "\n",
"SD:", stats$sd, "\n",
"Variance:", stats$variance, "\n",
"Median:", stats$median, "\n",
"Mode:", stats$mode, "\n",
"Lower Bound (3-sigma):", stats$lower_bound, "\n",
"Upper Bound (3-sigma):", stats$upper_bound, "\n",
"Outliers:", ifelse(length(stats$outliers) > 0, paste(stats$outliers, collapse = ", "), "None"), "\n")
# Visualize data distribution
ggplot(data, aes(x = wiek)) +
geom_histogram(binwidth = 5, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Age Distribution", x = "Age", y = "Count")
h <- hist(data$wiek, breaks = c(10, 20, 30, 40, 50, 60), prob = T)
h$counts <- cumsum(h$counts)
plot(h, main = "Cumulative Histogram", xlab = "Age", ylab = "Cumulative Count")
ggplot(data, aes(x = wiek)) +
stat_ecdf(geom = "step", color = "red") +
labs(title = "Cumulative Distribution Function of Age", x = "Age", y = "ECDF")
age_31_40 <- data %>% filter(wiek >= 31 & wiek <= 40)
percentage_31_40 <- (nrow(age_31_40) / nrow(data)) * 100
print(paste("Percentage of employees aged 31-40:", round(percentage_31_40, 2), "%"))
age_le_40 <- data %>% filter(wiek <= 40)
percentage_le_40 <- (nrow(age_le_40) / nrow(data)) * 100
print(paste("Percentage of employees aged â‰¤ 40:", round(percentage_le_40, 2), "%"))
ddd
exit
exit()
setwd('/home/michal/Desktop/R/14X')
